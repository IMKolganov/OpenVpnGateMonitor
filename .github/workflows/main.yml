name: Build and Deploy OpenVPNGateMonitor

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: [self-hosted, raspberrypi-2]
    name: Build and Deploy on Raspberry Pi
    env:
      ASPNETCORE_ENVIRONMENT: Production

    steps:
      - name: Clean workspace before checkout
        run: |
          echo "Cleaning up existing backend and frontend directories..."
          rm -rf backend frontend
      
      - name: Checkout full repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
          lfs: true
          persist-credentials: false

      - name: Debug working directory
        run: |
          echo "Current directory: $(pwd)"
          echo "Listing files:"
          ls -lah
          echo "Listing backend:"
          ls -lah backend/
          echo "Listing frontend:"
          ls -lah frontend/

      - name: Use existing configuration files
        run: |
          echo "Copying configuration files..."
          cp /home/rackot/configs/OpenVPNGateMonitor/appsettings.json ./backend/appsettings.json
          cp /home/rackot/configs/OpenVPNGateMonitor/appsettings.Development.json ./backend/appsettings.Development.json
          cp /home/rackot/certs/datagatetgbot.pem ./backend/datagatetgbot.pem
          cp /home/rackot/certs/datagatetgbot.key ./backend/datagatetgbot.key

      - name: Verify required files
        run: |
          echo "Verifying required files..."
          for file in backend/appsettings.json backend/appsettings.Development.json backend/datagatetgbot.pem backend/datagatetgbot.key; do
            if [ -s ./$file ]; then
              echo "$file is present and not empty."
            else
              echo "ERROR: $file is missing or empty!"
              exit 1
            fi
          done
          echo "âœ… All required files are present."

      - name: Build and start services with Docker Compose
        run: |
          echo "Stopping and removing old containers..."
          docker compose down || true
          echo "Building and starting new containers..."
          docker compose up --build -d

      - name: Verify running containers
        run: |
          echo "Checking running containers..."
          docker ps | grep openvpn || echo "ERROR: Containers are not running!"
