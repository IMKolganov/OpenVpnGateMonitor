version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: open-vpn-gate-monitor-backend
    restart: always
    networks:
      - openvpn_network
      - backend_network
    volumes:
      - openvpn_data:/mnt
      - ./backend/appsettings.json:/app/appsettings.json
      - ./backend/appsettings.Development.json:/app/appsettings.Development.json
    ports:
      - "5591:5591"
    depends_on:
      - postgres_backend
    environment:
      - FRONTEND_URL=http://frontend:5582
      - DOTNET_ENVIRONMENT=Debug
      - DB_CONNECTION_STRING=Host=postgres_backend;Port=5432;Database=datagate_backend;Username=backend_user;Password=securepassword_backend
      - DB_DEFAULT_SCHEMA=xgb_dashopnvpn
      - DB_MIGRATION_TABLE=__EFMigrationsHistoryBackend

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: open-vpn-gate-monitor-frontend
    restart: always
    networks:
      - openvpn_network
    ports:
      - "5592:5592"
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:5581

  telegrambot:
    build: 
      context: ./telegrambot
      dockerfile: Dockerfile
      args:
        TARGETARCH: ${TARGETARCH:?TARGETARCH is required}
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION:?BUILD_CONFIGURATION is required}
    container_name: open-vpn-gate-monitor-telegrambot
    restart: always
    networks:
      - backend_network
    depends_on:
      - postgres_telegrambot
    environment:
      - DB_CONNECTION_STRING=Host=postgres_telegrambot;Port=5432;Database=datagate_telegrambot;Username=telegrambot_user;Password=securepassword_telegrambot
      - DB_DEFAULT_SCHEMA=xgb_botvpndev
      - DB_MIGRATION_TABLE=__EFMigrationsHistoryTelegramBot
      - DEPLOY_ENV=${DEPLOY_ENV:?DEPLOY_ENV is required}
      - PORT=${PORT:?PORT is required}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:?ASPNETCORE_ENVIRONMENT is required}
    volumes:
      - openvpn_data:/mnt
      - ./telegrambot/appsettings.json:/app/appsettings.json
      - ./telegrambot/appsettings.Development.json:/app/appsettings.Development.json

  openvpn:
    build:
      context: ./openvpn
      dockerfile: Dockerfile
    container_name: openvpn
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - "/dev/net/tun:/dev/net/tun"
    volumes:
      - openvpn_data:/mnt
    ports:
      - "1192:1192/udp"
      - "5092:5092"

  postgres_backend:
    image: postgres:latest
    container_name: datagate_postgres_backend
    restart: always
    environment:
      - POSTGRES_DB=datagate_bakend
      - POSTGRES_USER=backend_user
      - POSTGRES_PASSWORD=securepassword_backend
    networks:
      - backend_network
    volumes:
      - postgres_data_backend:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  postgres_telegrambot:
    image: postgres:latest
    container_name: datagate_postgres_telegrambot
    restart: always
    environment:
      - POSTGRES_DB=datagate_telegrambot
      - POSTGRES_USER=telegrambot_user
      - POSTGRES_PASSWORD=securepassword_telegrambot
    networks:
      - backend_network
    volumes:
      - postgres_data_telegrambot:/var/lib/postgresql/data
    ports:
      - "5433:5432"

volumes:
  openvpn_data:
  postgres_data_backend:
  postgres_data_telegrambot:

networks:
  openvpn_network:
    driver: bridge
  backend_network:
    driver: bridge
