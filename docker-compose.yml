version: "3.8"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: open-vpn-gate-monitor-backend
    restart: always
    networks:
      - openvpn_network
      - backend_network
    volumes:
      - openvpn_data:/mnt
      - ./backend/appsettings.json:/app/appsettings.json
      - ./backend/appsettings.Development.json:/app/appsettings.Development.json
    ports:
      - "5591:5591"
    depends_on:
      - postgres
    environment:
      - FRONTEND_URL=http://frontend:5582
      - DOTNET_ENVIRONMENT=Debug
      - DB_CONNECTION_STRING=Host=postgres;Port=5432;Database=openvpn;Username=openvpn_user;Password=securepassword
      - DB_DEFAULT_SCHEMA=public
      - DB_MIGRATION_TABLE=__EFMigrationsHistory

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    container_name: open-vpn-gate-monitor-frontend
    restart: always
    networks:
      - openvpn_network
    ports:
      - "5592:5592"
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:5581

  telegrambot:
    build: 
      context: ./DataGateVPNBot
      dockerfile: Dockerfile
      args:
        TARGETARCH: ${TARGETARCH:?TARGETARCH is required}
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION:?BUILD_CONFIGURATION is required}
    container_name: open-vpn-gate-monitor-telegrambot
    restart: always
    networks:
      - backend_network
    env_file:
      - .env.local
    environment:
      - DB_CONNECTION_STRING=Host=postgres;Port=5432;Database=openvpn;Username=openvpn_user;Password=securepassword
      - DB_DEFAULT_SCHEMA=public
      - DB_MIGRATION_TABLE=__EFMigrationsHistory
      - DEPLOY_ENV=${DEPLOY_ENV:?DEPLOY_ENV is required}
      - PORT=${PORT:?PORT is required}
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:?ASPNETCORE_ENVIRONMENT is required}
    volumes:
      - openvpn_data:/mnt
      - ./DataGateVPNBot/appsettings.json:/app/appsettings.json
      - ./DataGateVPNBot/appsettings.Development.json:/app/appsettings.Development.json


  openvpn:
    build:
      context: ./openvpn
      dockerfile: Dockerfile
    container_name: openvpn
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    devices:
      - "/dev/net/tun:/dev/net/tun"
    volumes:
      - openvpn_data:/mnt
    ports:
      - "1192:1192/udp"
      - "5092:5092"

  postgres:
    image: postgres:latest
    container_name: datagate_postgres
    restart: always
    environment:
      - POSTGRES_DB=openvpn
      - POSTGRES_USER=openvpn_user
      - POSTGRES_PASSWORD=securepassword
    networks:
      - backend_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  openvpn_data:
  postgres_data:

networks:
  openvpn_network:
    driver: bridge
  backend_network:
    driver: bridge
